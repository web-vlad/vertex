// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$s-about-link-name: 's-about_link';
$s-about-link-x: 111px;
$s-about-link-y: 56px;
$s-about-link-offset-x: -111px;
$s-about-link-offset-y: -56px;
$s-about-link-width: 12px;
$s-about-link-height: 21px;
$s-about-link-total-width: 124px;
$s-about-link-total-height: 114px;
$s-about-link-image: 'sprite.png';
$s-about-link: (111px, 56px, -111px, -56px, 12px, 21px, 124px, 114px, 'sprite.png', 's-about_link', );
$s-btn-1-name: 's-btn_1';
$s-btn-1-x: 57px;
$s-btn-1-y: 0px;
$s-btn-1-offset-x: -57px;
$s-btn-1-offset-y: 0px;
$s-btn-1-width: 67px;
$s-btn-1-height: 37px;
$s-btn-1-total-width: 124px;
$s-btn-1-total-height: 114px;
$s-btn-1-image: 'sprite.png';
$s-btn-1: (57px, 0px, -57px, 0px, 67px, 37px, 124px, 114px, 'sprite.png', 's-btn_1', );
$s-btn-2-name: 's-btn_2';
$s-btn-2-x: 47px;
$s-btn-2-y: 56px;
$s-btn-2-offset-x: -47px;
$s-btn-2-offset-y: -56px;
$s-btn-2-width: 38px;
$s-btn-2-height: 27px;
$s-btn-2-total-width: 124px;
$s-btn-2-total-height: 114px;
$s-btn-2-image: 'sprite.png';
$s-btn-2: (47px, 56px, -47px, -56px, 38px, 27px, 124px, 114px, 'sprite.png', 's-btn_2', );
$s-info-name: 's-info';
$s-info-x: 0px;
$s-info-y: 0px;
$s-info-offset-x: 0px;
$s-info-offset-y: 0px;
$s-info-width: 56px;
$s-info-height: 55px;
$s-info-total-width: 124px;
$s-info-total-height: 114px;
$s-info-image: 'sprite.png';
$s-info: (0px, 0px, 0px, 0px, 56px, 55px, 124px, 114px, 'sprite.png', 's-info', );
$s-list-bread-name: 's-list_bread';
$s-list-bread-x: 11px;
$s-list-bread-y: 97px;
$s-list-bread-offset-x: -11px;
$s-list-bread-offset-y: -97px;
$s-list-bread-width: 8px;
$s-list-bread-height: 14px;
$s-list-bread-total-width: 124px;
$s-list-bread-total-height: 114px;
$s-list-bread-image: 'sprite.png';
$s-list-bread: (11px, 97px, -11px, -97px, 8px, 14px, 124px, 114px, 'sprite.png', 's-list_bread', );
$s-list-course-name: 's-list_course';
$s-list-course-x: 0px;
$s-list-course-y: 56px;
$s-list-course-offset-x: 0px;
$s-list-course-offset-y: -56px;
$s-list-course-width: 46px;
$s-list-course-height: 40px;
$s-list-course-total-width: 124px;
$s-list-course-total-height: 114px;
$s-list-course-image: 'sprite.png';
$s-list-course: (0px, 56px, 0px, -56px, 46px, 40px, 124px, 114px, 'sprite.png', 's-list_course', );
$s-phone-name: 's-phone';
$s-phone-x: 86px;
$s-phone-y: 56px;
$s-phone-offset-x: -86px;
$s-phone-offset-y: -56px;
$s-phone-width: 24px;
$s-phone-height: 24px;
$s-phone-total-width: 124px;
$s-phone-total-height: 114px;
$s-phone-image: 'sprite.png';
$s-phone: (86px, 56px, -86px, -56px, 24px, 24px, 124px, 114px, 'sprite.png', 's-phone', );
$s-sub-menu-name: 's-sub-menu';
$s-sub-menu-x: 0px;
$s-sub-menu-y: 97px;
$s-sub-menu-offset-x: 0px;
$s-sub-menu-offset-y: -97px;
$s-sub-menu-width: 10px;
$s-sub-menu-height: 17px;
$s-sub-menu-total-width: 124px;
$s-sub-menu-total-height: 114px;
$s-sub-menu-image: 'sprite.png';
$s-sub-menu: (0px, 97px, 0px, -97px, 10px, 17px, 124px, 114px, 'sprite.png', 's-sub-menu', );
$s-title-name: 's-title';
$s-title-x: 57px;
$s-title-y: 38px;
$s-title-offset-x: -57px;
$s-title-offset-y: -38px;
$s-title-width: 39px;
$s-title-height: 5px;
$s-title-total-width: 124px;
$s-title-total-height: 114px;
$s-title-image: 'sprite.png';
$s-title: (57px, 38px, -57px, -38px, 39px, 5px, 124px, 114px, 'sprite.png', 's-title', );
$spritesheet-width: 124px;
$spritesheet-height: 114px;
$spritesheet-image: 'sprite.png';
$spritesheet-sprites: ($s-about-link, $s-btn-1, $s-btn-2, $s-info, $s-list-bread, $s-list-course, $s-phone, $s-sub-menu, $s-title, );
$spritesheet: (124px, 114px, 'sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
